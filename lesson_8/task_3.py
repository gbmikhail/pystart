# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
#
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе
# пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class MyError(Exception):
    def __init__(self, txt):
        self.txt = txt


my_list = []

while True:
    value = input('Введите элемент списка. Для прекращения нажмите "q": ')
    if value[0:1] == 'q':
        break
    try:
        if not(value.isdigit()):
            raise MyError('Вы ввели не число!')
    except MyError as err:
        print(err)
    else:
        value = int(value)
        my_list.append(value)


print(my_list)
