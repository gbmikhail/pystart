# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        s = ''
        for i in self.matrix:
            s += '\t'.join(map(str, i)) + '\n'
        return s

    def __add__(self, other):
        matrix = list()
        for y in range(max(len(self.matrix), len(other.matrix))):
            ls = list()
            for x in range(max(len(self.matrix[0]), len(other.matrix[0]))):
                v1, v2 = 0, 0
                try:
                    v1 = self.matrix[y][x]
                except:
                    pass
                try:
                    v2 = other.matrix[y][x]
                except:
                    pass
                ls.append(v1 + v2)
            matrix.append(ls)
        return Matrix(matrix)


m1 = Matrix([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
])
m2 = Matrix([
    [1, 2],
    [3, 4]
])

print(f"Матрица 1\n{m1}")
print(f"Матрица 1\n{m2}")
print(f"Матрица 1 + 2\n{m1 + m2}")
